---
version: "3.7"

services:

  consumer:
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/notify-queue-consumer:latest
    build:
      context: .
      dockerfile: docker/Dockerfile
    depends_on:
      localstack:
        condition: service_healthy
      mock-notify:
        condition: service_healthy
      mock-sirius:
        condition: service_healthy
    env_file: [ local.env ]

  phpstan:
    image: jakzal/phpqa:php8.3-alpine
    volumes:
      - .:/app
    command:
      - "phpstan"
      - "analyse"
      - "-c"
      - "/app/tests/phpstan.neon"

  phpmetrics:
    image: jakzal/phpqa:php8.3-alpine
    volumes:
      - .:/app
    command:
      - "phpmetrics"
      - "--report-html=/app/test-results/phpmetrics"
      - "/app/src/NotifyQueueConsumer"

  lint:
    image: jakzal/phpqa:php8.3-alpine
    volumes:
      - ./src:/app/src
      - ./public:/app/public
    command:
      - phpcs
      - -p
      - --report=checkstyle
      - --standard=PSR12
      - --warning-severity=0
      - /app/src
      - /app/public

  phpmd:
    image: jakzal/phpqa:php8.3-alpine
    volumes:
      - ./src:/app/src
      - ./public:/app/public
    command:
      - phpmd
      - /app/src/NotifyQueueConsumer
      - text
      - codesize,unusedcode,naming

  check-coverage:
    image: jakzal/phpqa:php8.3-alpine
    volumes:
      - .:/app
    command:
      - "php"
      - "-f"
      - "/app/scripts/coverage-checker.php"
      - "/app/test-results/clover/results.xml"
      - "100"

  test:
    image: jakzal/phpqa:php8.3-alpine
    volumes:
      - .:/app
    command:
      - "php"
      - "-dpcov.enabled=1"
      - "-dpcov.directory=/app"
      - "-dpcov.exclude=\"~vendor~\""
      - "/app/vendor/bin/phpunit"
      - "--configuration=/app/tests/phpunit.xml"
      - "--coverage-text"
      - "--log-junit=/app/test-results/unit/results.xml"
      - "--testsuite=unit"

  test-functional:
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/notify-queue-consumer:latest
    depends_on:
      localstack:
        condition: service_healthy
      mock-notify:
        condition: service_healthy
      mock-sirius:
        condition: service_healthy
    command:
      - "/var/www/vendor/bin/phpunit"
      - "--configuration=/var/www/tests/phpunit.xml"
      - "--no-coverage"
      - "--log-junit=/var/www/test-results/functional/results.xml"
      - "--testsuite=functional"
    env_file: [ local.env ]

  localstack:
    image: localstack/localstack:4.1.1
    environment:
      DEFAULT_REGION: eu-west-1
    volumes:
      - "./scripts/localstack/init:/etc/localstack/init/ready.d"
      - "./scripts/localstack/wait:/scripts/wait"
      - "./tests/fixtures:/tmp/fixtures"
    networks:
      default:
        aliases:
          - sqs.eu-west-1.localhost.localstack.cloud
    healthcheck:
      test: bash /scripts/wait/health_check.sh
      interval: 15s
      timeout: 10s
      retries: 3

  mock-notify:
    image: consumer-mock-notify:latest
    container_name: consumer-notify
    build:
      context: .
      dockerfile: docker/mock-notify/Dockerfile
    command:
      - "mock"
      - "-h"
      - "0.0.0.0"
      - "/app/mock-notify/openapi.yml"
    volumes:
      - "./docker/mock-notify:/app/mock-notify"
    ports:
      - "4010:4010"
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 10s

  mock-sirius:
    image: consumer-mock-sirius:latest
    container_name: consumer-sirius
    build:
      context: .
      dockerfile: docker/mock-sirius/Dockerfile
    command:
      - "mock"
      - "-p"
      - "4011"
      - "-h"
      - "0.0.0.0"
      - "/app/mock-sirius/openapi.yml"
    volumes:
      - "./docker/mock-sirius:/app/mock-sirius"
    ports:
      - "4011:4011"
    healthcheck:
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 10s

  composer:
    image: composer
    command: [ "install" ]
    volumes:
      - ~/.composer:/tmp
      - ./:/app

  trivy:
    image: aquasec/trivy:latest
    environment:
      - TRIVY_DB_REPOSITORY=${TRIVY_DB_REPOSITORY}
      - TRIVY_JAVA_DB_REPOSITORY=${TRIVY_JAVA_DB_REPOSITORY}
      - TRIVY_USERNAME=${DOCKER_USERNAME}
      - TRIVY_PASSWORD=${DOCKER_PASSWORD}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.trivy-cache:/root/.cache
      - ./test-results:/test-results
